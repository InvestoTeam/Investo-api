name: Deploy Investo API

on:
  push:
    branches:
      - main
  workflow_dispatch:

jobs:
  deploy:
    name: Deploy to deploy branch
    runs-on: ubuntu-latest
    permissions:
      contents: write
      actions: write  # Required for triggering workflows
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      # Deploy to the deploy branch
      - name: Deploy to deploy branch
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          # Configure git with token-based authentication
          git config --global user.name "GitHub Actions"
          git config --global user.email "actions@github.com"

          # Set the remote URL with token authentication using environment variables
          git remote set-url origin https://x-access-token:${GITHUB_TOKEN}@github.com/${GITHUB_REPOSITORY}.git
          
          # Fetch deploy branch to see if Azure workflow exists there
          git fetch origin deploy
          
          # Create a temporary branch from the current HEAD
          git checkout -b temp-deploy-branch
          
          # Remove only this workflow file
          git rm -f .github/workflows/deploy.yml
          
          # Check if Azure workflow exists in deploy branch and fetch it
          if git show origin/deploy:.github/workflows/deploy_investo-api.yml > /dev/null 2>&1; then
            echo "Azure workflow file exists in deploy branch - copying it with modifications"
            mkdir -p .github/workflows/
            # Get the workflow file content and add a timestamp comment to force GitHub to detect changes
            git show origin/deploy:.github/workflows/deploy_investo-api.yml > .github/workflows/deploy_investo-api.yml
            echo "# Last updated: $(date -u)" >> .github/workflows/deploy_investo-api.yml
            git add .github/workflows/deploy_investo-api.yml
          else
            echo "WARNING: Azure workflow file not found in deploy branch"
          fi
          
          # Commit the change
          git commit -m "Deploy latest changes from main to production"
          
          # Force push to deploy branch
          git push -f origin temp-deploy-branch:deploy

      # Directly start the Azure deployment using multiple approaches to ensure it runs
      - name: Trigger Azure Deployment
        run: |
          sleep 3 # Give GitHub a moment to process the push to deploy branch
          
          echo "METHOD 1: Triggering with workflow_dispatch API (correct format)..."
          WORKFLOW_ID=$(curl -s -H "Accept: application/vnd.github+json" \
            -H "Authorization: Bearer ${{ secrets.GITHUB_TOKEN }}" \
            -H "X-GitHub-Api-Version: 2022-11-28" \
            https://api.github.com/repos/${GITHUB_REPOSITORY}/actions/workflows | jq -r '.workflows[] | select(.name=="Build and deploy ASP.Net Core app to Azure Web App - Investo-Api") | .id')
          
          if [ ! -z "$WORKFLOW_ID" ]; then
            echo "Found workflow ID: $WORKFLOW_ID"
            curl -X POST \
              -H "Accept: application/vnd.github+json" \
              -H "Authorization: Bearer ${{ secrets.GITHUB_TOKEN }}" \
              -H "X-GitHub-Api-Version: 2022-11-28" \
              -H "Content-Type: application/json" \
              "https://api.github.com/repos/${GITHUB_REPOSITORY}/actions/workflows/${WORKFLOW_ID}/dispatches" \
              -d '{"ref":"deploy"}'
          else
            echo "Could not find workflow ID - trying with filename instead"
            curl -X POST \
              -H "Accept: application/vnd.github+json" \
              -H "Authorization: Bearer ${{ secrets.GITHUB_TOKEN }}" \
              -H "X-GitHub-Api-Version: 2022-11-28" \
              -H "Content-Type: application/json" \
              "https://api.github.com/repos/${GITHUB_REPOSITORY}/actions/workflows/deploy_investo-api.yml/dispatches" \
              -d '{"ref":"deploy"}'
          fi
          
          echo "METHOD 2: Creating empty commit to trigger workflow via push event..."
          # Create an empty commit on deploy branch
          git fetch origin deploy
          git checkout deploy
          git config --global user.name "GitHub Actions"
          git config --global user.email "actions@github.com"
          
          # Commit empty change and push
          git commit --allow-empty -m "Trigger Azure deployment workflow via empty commit"
          git push origin deploy
          
          echo "Both methods attempted to trigger deployment. Check Actions tab for results."
