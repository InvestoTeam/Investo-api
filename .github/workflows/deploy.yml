name: Deploy Investo API

on:
  push:
    branches:
      - main
  workflow_dispatch:

jobs:
  deploy:
    name: Deploy to deploy branch
    runs-on: ubuntu-latest
    permissions:
      contents: write
      actions: write  # Required for triggering workflows
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      # Deploy to the deploy branch
      - name: Deploy to deploy branch
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          # Configure git with token-based authentication
          git config --global user.name "GitHub Actions"
          git config --global user.email "actions@github.com"

          # Set the remote URL with token authentication using environment variables
          git remote set-url origin https://x-access-token:${GITHUB_TOKEN}@github.com/${GITHUB_REPOSITORY}.git
          
          # Fetch deploy branch to see if Azure workflow exists there
          git fetch origin deploy
          
          # Create a temporary branch from the current HEAD
          git checkout -b temp-deploy-branch
          
          # Remove only this workflow file
          git rm -f .github/workflows/deploy.yml
          
          # Check if Azure workflow exists in deploy branch and preserve it
          if git show origin/deploy:.github/workflows/deploy_investo-api.yml > /dev/null 2>&1; then
            echo "Azure workflow file exists in deploy branch and will be preserved"
            mkdir -p .github/workflows/
            git show origin/deploy:.github/workflows/deploy_investo-api.yml > .github/workflows/deploy_investo-api.yml
            git add .github/workflows/deploy_investo-api.yml
          else
            echo "Note: Azure workflow file not found in deploy branch"
          fi
          
          # Commit the change
          git commit -m "Deploy latest changes from main to production"
          
          # Force push to deploy branch
          git push -f origin temp-deploy-branch:deploy

      # Trigger the deployment workflow in deploy branch
      - name: Trigger deployment workflow
        run: |
          # Sleep to give GitHub time to process the push before dispatching the event
          sleep 10
          
          # Try with GITHUB_TOKEN first
          echo "Trying to trigger workflow with GITHUB_TOKEN..."
          RESPONSE=$(curl -s -o /dev/null -w "%{http_code}" -X POST \
            -H "Authorization: token ${{ secrets.GITHUB_TOKEN }}" \
            -H "Accept: application/vnd.github.v3+json" \
            -H "Content-Type: application/json" \
            "https://api.github.com/repos/${GITHUB_REPOSITORY}/dispatches" \
            -d '{"event_type":"deploy_triggered", "client_payload": {"source": "main_workflow", "timestamp": "'$(date -u "+%Y-%m-%dT%H:%M:%SZ")'"}}')
          
          if [ "$RESPONSE" == "204" ]; then
            echo "Successfully triggered deployment workflow with GITHUB_TOKEN"
          else
            echo "Failed with response code: $RESPONSE"
            echo "Will try direct push to deploy branch to trigger workflow..."
            
            # Create and push an empty commit to deploy branch to trigger the workflow
            git checkout deploy
            git pull origin deploy
            git config --global user.name "GitHub Actions"
            git config --global user.email "actions@github.com"
            git commit --allow-empty -m "Trigger deployment workflow by empty commit"
            git push origin deploy
            
            echo "Empty commit pushed to deploy branch to trigger deployment workflow"
          fi
