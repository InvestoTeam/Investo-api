name: Deploy Investo API

on:
  push:
    branches:
      - main
  workflow_dispatch:

jobs:
  deploy:
    name: Deploy to deploy branch
    runs-on: ubuntu-latest
    permissions:
      contents: write
      actions: write  # Required for triggering workflows
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      # Deploy to the deploy branch
      - name: Deploy to deploy branch
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          # Configure git with token-based authentication
          git config --global user.name "GitHub Actions"
          git config --global user.email "actions@github.com"

          # Set the remote URL with token authentication using environment variables
          git remote set-url origin https://x-access-token:${GITHUB_TOKEN}@github.com/${GITHUB_REPOSITORY}.git
          
          # Fetch deploy branch to see if Azure workflow exists there
          git fetch origin deploy
          
          # Create a temporary branch from the current HEAD
          git checkout -b temp-deploy-branch
          
          # Remove only this workflow file
          git rm -f .github/workflows/deploy.yml
          
          # Check if Azure workflow exists in deploy branch and preserve it
          if git show origin/deploy:.github/workflows/deploy_investo-api.yml > /dev/null 2>&1; then
            echo "Azure workflow file exists in deploy branch and will be preserved"
            mkdir -p .github/workflows/
            git show origin/deploy:.github/workflows/deploy_investo-api.yml > .github/workflows/deploy_investo-api.yml
            git add .github/workflows/deploy_investo-api.yml
          else
            echo "Note: Azure workflow file not found in deploy branch"
          fi
          
          # Commit the change
          git commit -m "Deploy latest changes from main to production"
          
          # Force push to deploy branch
          git push -f origin temp-deploy-branch:deploy

      # Directly start the Azure deployment without relying on another workflow
      - name: Trigger Azure Deployment
        run: |
          # Always create and push an empty commit to deploy branch to trigger the workflow
          # This is more reliable than repository_dispatch
          echo "Creating empty commit in deploy branch to trigger deployment workflow..."
          
          # Create an empty commit on deploy branch
          git fetch origin deploy
          git checkout deploy
          git config --global user.name "GitHub Actions"
          git config --global user.email "actions@github.com"
          
          # Try to commit and push
          if git commit --allow-empty -m "Trigger Azure deployment" && git push origin deploy; then
            echo "Successfully triggered deployment with empty commit"
          else
            echo "Failed to push empty commit. Check repository permissions."
            exit 1
          fi
